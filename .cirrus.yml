docs_task:
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  container:
    image: python:3.8-slim

  install_script:
    - apt update && apt install make
    - pip install --upgrade-strategy eager -U -r requirements-docs.txt
    - pip install -e .

  script:
    - make -C docs/ html

lint_task:
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  container:
    image: python:3.8-slim

  install_script:
    - pip install --upgrade-strategy eager -U -r requirements-tests.txt
    - pip install --upgrade-strategy eager -U -r requirements-lint.txt
    - pip install -e .

  script:
    - python3 --version
    - pip list
    - ./lint.sh

pep517_task:
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  container:
    image: python:3.8-slim

  install_script:
    - pip install --upgrade-strategy eager -U pep517

  script:
    - python3 -m pep517.check .

upload_task:
  # only_if: $CIRRUS_RELEASE != ""
  env:
    TWINE_REPOSITORY_URL: "https://test.pypi.org/legacy/"
    TWINE_USER: pursuedpybot
    TWINE_PASSWORD: "ENCRYPTED[31855ff9a080d4be75462409aa237fd116237b333f28cbfdadf0b3e3a15e2c9d542c4ab26d14323765b7e23072bcd126]"
    GITHUB_TOKEN: "ENCRYPTED[6975bc1548d212e17af0529b0041745c188388461f0481c858db317ad2417c3a36014a019b3d6797e62f938098400d6c]"

  container:
    image: python:3.8-slim

  install_script:
    - pip install --upgrade-strategy eager -U -r requirements-upload.txt
    - apt-get update
    - apt-get install -y curl

  script:
    - ./setup.py sdist bdist_wheel
    - ls -Al dist
    - python -m tarfile -l dist/*.tar.*
    - python -m zipfile -l dist/*.whl
    - ./.ci/upload-build.sh


FreeBSD_task:
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  freebsd_instance:
    image_family: freebsd-12-1
  env:
    matrix:
      - PYTHON: 3.6
      - PYTHON: 3.7
      - PYTHON: 3.8
  install_script:
    - PYVER=`echo $PYTHON | tr -d '.'`
    - PYPKG=py${PYVER}
    - PY=python${PYTHON}
    - pkg install -y bash python${PYVER} ${PYPKG}-setuptools
    - ${PY} -m ensurepip
    - ${PY} -m pip install --upgrade-strategy eager -U -r requirements-tests.txt
    - ${PY} -m pip install -e .

  script:
    - export PY=python${PYTHON}
    - ${PY} --version
    - ${PY} -m pip list
    - ./test.sh

task:
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  env:
    matrix:
      - IMAGE: python:3.6-slim
      - IMAGE: python:3.7-slim
      - IMAGE: python:3.8-slim
      - IMAGE: python:3.9-slim
      - IMAGE: python:3.10-rc-slim
      - IMAGE: pypy:3.6-slim
      - IMAGE: pypy:3.7-slim
  name: "Linux $IMAGE"
  allow_failures: $IMAGE =~ '.*-rc-.*'
  container:
    image: $IMAGE

  install_script:
    - pip install --upgrade-strategy eager -U -r requirements-tests.txt
    - pip install -e .

  script:
    - command -v pypy3 >/dev/null && export PY=pypy3
    - ${PY-python3} --version
    - pip list
    - ./test.sh

macOS_task:
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  osx_instance:
    image: catalina-xcode
  env:
    PATH: ${HOME}/.pyenv/shims:${PATH}
    matrix:
      - PYTHON: 3.6.12
      - PYTHON: 3.7.7
      - PYTHON: 3.8.6
      - PYTHON: 3.9.0
  install_script:
    # Per the pyenv homebrew recommendations.
    # https://github.com/pyenv/pyenv/wiki#suggested-build-environment
    - brew install openssl readline pyenv
    - pyenv install ${PYTHON}
    - pyenv global ${PYTHON}
    - pyenv rehash
    - pip install --upgrade-strategy eager -U pip wheel setuptools
    - pip install --upgrade-strategy eager -U -r requirements-tests.txt
    - pip install -e .

  script:
    - python3 --version
    - pip list
    - ./test.sh

task:
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  env:
    matrix:
      - IMAGE: python:3.6-windowsservercore
      - IMAGE: python:3.7-windowsservercore
      - IMAGE: python:3.8-windowsservercore
      - IMAGE: python:3.9-windowsservercore
      - IMAGE: python:3.10-rc-windowsservercore
  allow_failures: $IMAGE =~ '.*-rc-.*'
  name: "Windows $IMAGE"
  windows_container:
    os_version: 2019
    image: $IMAGE

  install_script:
    - C:\Python\python.exe -m pip install --upgrade-strategy eager -U -r requirements-tests.txt
    - C:\Python\python.exe -m pip install -e .

  script:
    - C:\Python\python.exe --version
    - C:\Python\python.exe -m pip list

    - C:\Python\python.exe -m doctest README.md ppb_vector/__init__.py
    - C:\Python\python.exe -m pytest --hypothesis-profile ci
